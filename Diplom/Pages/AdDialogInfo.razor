@inject Radzen.DialogService dialogService

<button class="uk-modal-close-full uk-close-large" type="button" uk-close @onclick="@((args) => OnClose())"></button>
<div class="uk-grid-collapse uk-child-width-1-2@s uk-flex-middle" uk-grid>
    <div class="uk-background-cover" uk-grid uk-lightbox="animation: slide" uk-height-viewport>
        <a class="uk-inline" href="@Images.FirstOrDefault()"
           data-caption="Отличного настроения!">
            <img src="@Images.FirstOrDefault()" alt="Тестовое изображение" loading="lazy">
        </a>
        <div class="uk-child-width-1-3@m" uk-grid uk-lightbox="animation: slide">
            @for (int i = 1; i < Images.Count; i++)
            {
                <div>
                    <a class="uk-inline" href="@Images[i]"
                   data-caption="Всё прекрасно!">
                        <img src="@Images[i]" width="450" height="300" alt="Тестовое изображение"
                         loading="lazy">
                    </a>
                </div>
            }
        </div>
    </div>
    <div class="uk-padding-large">
        <h3>@ad.Name</h3>
        <p>
            На портрете была изображена дама в меховой шляпе и боа,
            она сидела очень прямо и протягивала зрителю тяжелую меховую муфту, в которой целиком исчезала
            ее рука.
            Затем взгляд Грегора устремился в окно, и пасмурная погода – слышно было,
            как по жести подоконника стучат капли дождя – привела его и вовсе в грустное настроение.
            «Хорошо бы еще немного поспать и забыть всю эту чепуху», – подумал он,
            но это было совершенно неосуществимо, он привык спать на правом боку.
        </p>
    </div>
</div>



@code {
    [Parameter] public Ad ad { get; set; }

    private List<System.IO.FileInfo> images { get; set; }

    public string path { get; set; }
    public List<string> Images { get; set; } 

    protected override void OnInitialized()
    {
        path = $"{Directory.GetCurrentDirectory()}/wwwroot/files/{ad.Guid}/";

        ImageHelper.SaveImage(ad.Photo.Select(p => p.ImageHash).ToList(), path);

        var dirInfo = new DirectoryInfo(path);
        images = dirInfo.GetFiles().ToList();
        Images = new List<string>(images.Count);

        images.ForEach(i =>
        {
            var pathImage = $"/files/{ad.Guid}/" + i.Name;
            Images.Add(pathImage);
        });
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            return;
    }

    private void OnClose()
    {
        var dirInfo = new DirectoryInfo(path);
        if (!dirInfo.Exists)
            return;

        foreach (var file in images)
            file.Delete();

        dialogService.Close(false);
    }
}
